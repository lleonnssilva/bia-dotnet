name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
     # Realiza o login no ECR
    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: private
        skip-logout: false
        
    - name: Build Docker image
      run: |
        docker build -t bia .
        docker tag bia:latest 676206946905.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/bia:latest

    - name: Run migrations
      run: |
        docker run -e DB_HOST=${{ secrets.DB_HOST }} \
                   -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
                   -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
                   -e DB_NAME=${{ secrets.DB_NAME }} \
                   your-docker-image dotnet ef database update
          docker exec server dotnet ef database update
          
    - name: Push Docker image to Amazon ECR
      run: |
        docker push 676206946905.dkr.ecr.${{ secrets.AWS_REGION  }}.amazonaws.com/bia:latest

     # Atualiza o servi√ßo ECS
    - name: Update ECS service
      run: |
        aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} --service ${{ secrets.ECS_SERVICE }} --force-new-deployment --task-definition ${{ secrets.ECS_TASK_DEFINITION  }} 
   
  
